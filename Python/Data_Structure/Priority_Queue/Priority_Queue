//返回最大的元素
HEAP-MAXIMUM(A):
  return A[1]
  
//去掉并返回最大的元素
HEAP-EXTRACT-MAX(A):
  if A.heap-size<1
    error "heap underflow!"
  max=A[1]
  A[1]=A[A.heap-size]
  A.heap-size=A.heap-size-1
  MAX-HEAPIFY(A,1)
  return max

//将元素的关键字值增加到key
HEAP-INCREASE-KEY(A,i,key):
  if key<A[i]
    error "new key is smaller than current key!"
  A[i]=key
  while i>1 and A[PARENT(i)]<A[i]
    exchange A[i] with A[PARENT[i]] 
    i=PARENT[i]
    
//将元素插入
MAX-HEAP-INSERT(A,key):
  A.heap-size=A.heap-size+1
  A[A.heap-size]=0
  HEAP-INCREASE-KEY(A,A.heap-size,key)
